version: '3'
services:
  app:
    container_name: url_shortener
    build: .
    ports: 
      - 8080:8080 
    restart: on-failure
    volumes:
      - api:/usr/src/app/
    depends_on:
      postgresql:
          condition: service_healthy     
    networks:
      - fullstack


  postgresql:
      image: postgres:latest
      container_name: db_postgres
      environment:
        - POSTGRES_USER=${POSTGRESQL_USER}  
        - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
        - POSTGRES_DB=${POSTGRESQL_DB_NAME}
        - DATABASE_HOST=${POSTGRESQL_HOST} 
      ports:
        - '5432:5432'
      volumes:
        - database_postgres:/var/lib/postgresql/data
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U postgres"]
        interval: 5s
        timeout: 5s
        retries: 5

      networks:
        - fullstack
      
  pgadmin:
      image: dpage/pgadmin4
      container_name: pgadmin_container
      environment:
        PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
        PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      depends_on:
        - postgresql
      ports:
        - "5050:80"
      networks:
        - fullstack
      restart: unless-stopped

volumes:
  api:
  database_postgres:                  

# Networks to be created to facilitate communication between containers
networks:
  fullstack:
    driver: bridge
